server.contextPath=/bpm

#spring.activiti.jobExecutorActivate=true
spring.activiti.job-executor-activate=true
spring.activiti.rest-api-enabled=true
spring.activiti.async-executor-activate=true
spring.activiti.async-executor-enabled=true
spring.activiti.jpa-enabled=true

#default units are minutes
#email.timer=5

security.basic.enabled=false
security.basic.path=*/*
server.port=8989


# Activity Database Connection 
spring.datasource.url = jdbc:mysql://localhost:3306/activiti?useSSL=false
spring.datasource.username=root
spring.datasource.password=root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create-drop

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# HSRP Configuration
hsrp.post.tr.records.url = http://43.242.124.207/laplhsrpservice/api/HSRPRecord/postHsrpRecords
hsrp.post.pr.records.url = http://43.242.124.207/laplhsrpservice/api/PRNumber/updatePRNumber
hsrp.securitykey = Z5^q3&G6k#b%0Me@
hsrp.contenttype = application/json

#Schedule cron expression for hsrp
scheduler.hsrp.failure  = 0 0 5 * * *

reg.service.serverUrl=https://otsiuat.epragathi.org:8443/reg/

#Scheduler accepts (true/false). If value is not found, it will be considered as false.
scheduler.hsrp.failure.isEnable=false